{% set max_width = 'max-w-7xl mx-auto w-full' %}
{% set section_padding = 'px-4 sm:px-6 lg:px-8' %}
{% set site_js = 'user://themes/metricalo-base/dist/js/main.js?v=3' %}
{% set data = config.data %}
{% block render_block %}{% endblock %}

<link href="{{ url('theme://assets/css/owl.carousel.min.css') }}" rel="stylesheet" />
<link rel="stylesheet" href="{{ url('theme://assets/css/owl.theme.default.min.css') }}">
{% do assets.addJs('theme://assets/js/animation.js', {group: 'bottom', loading: 'defer'}) %}
{% do assets.addJs('theme://assets/js/owl.carousel.min.js', {group: 'bottom', loading: 'defer'}) %}

<script>
    document.addEventListener("DOMContentLoaded", function () {


        //FAQ accordion
        const accordionButtons = document.querySelectorAll(".faq-accordion-header");

        accordionButtons.forEach((button) => {
            button.addEventListener("click", function ()  {
                const targetId = button.getAttribute("data-target");
                const body = document.querySelector(targetId);
                const parentItem = button.closest(".faq-accordion-item");
                const upIcon = parentItem.querySelector(".faq-accordion-up-btn");

                const openHeader = parentItem.querySelector(".faq-accordion-btn");
                
                const downIcon = parentItem.querySelector(".faq-accordion-down-btn");


                const isOpen = !body.classList.contains("d-none");

                if (isOpen) {
                    setTimeout(() => {
                        body.style.height = 0 + "px";
                    }, 10);

                    setTimeout(() => {
                        body.classList.add("d-none");
                    }, 15);

                    upIcon.classList.add("d-none"); 
                    downIcon.classList.remove("d-none");

                    openHeader.classList.remove("opened");
                } else {
                    setTimeout(() => {
                        body.style.height = 100 + "%";
                    }, 10);

                    setTimeout(() => {
                        body.classList.remove("d-none");
                    }, 15);

                    upIcon.classList.remove("d-none");
                    downIcon.classList.add("d-none");
                    
                    openHeader.classList.add("opened");
                }
            });
        });
    });
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const playButtons = document.querySelectorAll('.play-button');
    
    playButtons.forEach(button => {
        button.addEventListener('click', function() {
            const videoContainer = this.parentElement;
            const video = videoContainer.querySelector('.lazy-video');
         
            if (!video.src && video.dataset.src) {
                video.src = video.dataset.src;
                video.load();
            }
            
            video.play()
                .then(() => {
      
                    this.style.display = 'none';
                    
                })
                .catch(error => {
                    console.error('Video failed:', error);
                });
        });
    });

    const allVideos = document.querySelectorAll('.lazy-video');
        allVideos.forEach(video => {
            const container = video.closest('.video-container');
            const playButton = container.querySelector('.play-button');
            video.addEventListener('mouseenter', () => {
                if (!video.paused) {
                    video.style.cursor = 'pointer';
                }
            });
            video.addEventListener('mouseleave', () => {
                video.style.cursor = 'default';
            });
            video.addEventListener('click', () => {
                if (!video.paused) {
                    video.pause();
                }
            });
            video.addEventListener('play', () => {
                if (playButton) {
                    playButton.style.display = 'none';
                }
            });
            video.addEventListener('pause', () => {
                if (playButton) {
                   
                    playButton.style.removeProperty('display');
                }
            });
        });
});
</script>
